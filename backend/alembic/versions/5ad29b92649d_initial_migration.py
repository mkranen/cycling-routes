"""Initial migration

Revision ID: 5ad29b92649d
Revises: 
Create Date: 2024-12-24 17:55:30.877664

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5ad29b92649d"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "komoot_routes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("source", sa.JSON(), nullable=True),
        sa.Column("routing_version", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("kcal_active", sa.Integer(), nullable=True),
        sa.Column("kcal_resting", sa.Integer(), nullable=True),
        sa.Column("distance", sa.Float(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("elevation_up", sa.Float(), nullable=True),
        sa.Column("elevation_down", sa.Float(), nullable=True),
        sa.Column("sport", sa.String(), nullable=True),
        sa.Column("query", sa.String(), nullable=True),
        sa.Column("constitution", sa.Integer(), nullable=True),
        sa.Column("changed_at", sa.DateTime(), nullable=True),
        sa.Column("potential_route_update", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "komoot_difficulties",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("grade", sa.String(), nullable=True),
        sa.Column("explanation_technical", sa.String(), nullable=True),
        sa.Column("explanation_fitness", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["komoot_routes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "komoot_path_points",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("lat", sa.Float(), nullable=True),
        sa.Column("lng", sa.Float(), nullable=True),
        sa.Column("index", sa.Integer(), nullable=True),
        sa.Column("end_index", sa.Integer(), nullable=True),
        sa.Column("reference", sa.String(), nullable=True),
        sa.Column("segment_type", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["komoot_routes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "komoot_segments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("from_index", sa.Integer(), nullable=True),
        sa.Column("to_index", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["komoot_routes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "komoot_start_points",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("lat", sa.Float(), nullable=True),
        sa.Column("lng", sa.Float(), nullable=True),
        sa.Column("alt", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["komoot_routes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "komoot_surface_summaries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["komoot_routes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "komoot_tour_information",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("segments", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["komoot_routes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "komoot_way_type_summaries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["komoot_routes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("komoot_way_type_summaries")
    op.drop_table("komoot_tour_information")
    op.drop_table("komoot_surface_summaries")
    op.drop_table("komoot_start_points")
    op.drop_table("komoot_segments")
    op.drop_table("komoot_path_points")
    op.drop_table("komoot_difficulties")
    op.drop_table("komoot_routes")
    # ### end Alembic commands ###
